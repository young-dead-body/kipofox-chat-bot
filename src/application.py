from telegram.ext import Application, ContextTypes
from src.config.config_loader import ConfigLoader
from src.handlers.handlers import Handlers


class BotApplication:
    def __init__(self):
        self.config = ConfigLoader.load()
        self.app = Application.builder().token(self.config.token).build()
        self.app.add_error_handler(self.error_handler)
        self.handlers = Handlers()

    @staticmethod
    async def error_handler(update: object, context: ContextTypes.DEFAULT_TYPE):
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {context.error}")
        if update and hasattr(update, 'message'):
            await update.message.reply_text("üò¢ –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ")

    def setup_handlers(self):
        """–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –≤—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∏–∑ —Ä–æ—É—Ç–µ—Ä–∞."""
        for handler in self.handlers.get_registered_handlers():
            self.app.add_handler(handler)

    def run(self):
        self.setup_handlers()
        print("Bot started...")
        self.app.run_polling()